scalar Amount_Tokens
scalar EthereumAddress
scalar Amount_Percentage
scalar EmailAddress
scalar Date
scalar DateTime
scalar URL
scalar Amount_Money
scalar OLabel
scalar Currency
scalar PHID
scalar OID
scalar Amount_Fiat
scalar Amount_Currency
scalar Amount_Crypto
scalar Amount
type ScalarTestingState {
  booleans: [BooleanFieldType!]!
  numbers: [NumberFieldType!]!
  strings: [StringFieldType!]!
  urls: [URLFieldType!]!
  countries: [CountryFieldType!]!
  currency: [CurrencyFieldType!]!
  enums: [EnumFieldType!]!
  amount: [AmountFieldType!]!
  amountPercentage: [AmountFieldPercentageType!]!
  amountFiat: [AmountFiatFieldType!]!
  amountCrypto: [AmountCryptoFieldType!]!
  amountCurrency: [AmountCurrencyFieldType!]!
  phids: [PHIDFieldType!]!
  aids: [AIDFieldType!]!
  oids: [OIDFieldType!]!
  dropdown: [DropDown!]!
  date: [DateFieldType!]!
  time: [TimeFieldType!]!
  datetime: [DateTimeFieldType!]!
  emails: [EmailAddressFieldType!]!
}

type BooleanFieldType {
  id: ID!
  boolean: Boolean!
}

type NumberFieldType {
  id: ID!
  integer: Int
  float: Float
  bigInt: Int
}

type StringFieldType {
  id: ID!
  string: String
}

type URLFieldType {
  id: ID!
  url: URL
}

type CountryFieldType {
  id: ID!
  country: String
}

type CurrencyFieldType {
  id: ID!
  currency: Currency
}

type EnumFieldType {
  id: ID!
  enum: String
  enumMultiple: [String]
}
type DropDown {
  id: ID!
  value: String
}

type AmountFieldType {
  id: ID!
  value: Amount
}

type AmountFieldPercentageType {
  id: ID!
  value: Amount_Percentage
}

type AmountFiatFieldType {
  id: ID!
  value: Amount_Fiat
}

type AmountCryptoFieldType {
  id: ID!
  value: Amount_Crypto
}
type AmountCurrencyFieldType {
  id: ID!
  value: Amount_Currency
}


type PHIDFieldType {
  id: ID!
  phid: String
}

type AIDFieldType {
  id: ID!
  aid: String
}

type OIDFieldType {
  id: ID!
  oid: String
}
type DateFieldType {
  id: ID!
  date: String
}
type TimeFieldType {
  id: ID!
  time: String
}
type DateTimeFieldType{
  id: ID!
  datetime: String
}

type EmailAddressFieldType{
  id: ID!
  email: EmailAddress
}






# boolean_testing

input AddBooleanInput {
  id: ID!
  boolean: Boolean!
}

input RemoveBooleanInput {
  id: ID!
}

# numbers_testing

input AddNumberInput {
  id: ID!
  integer: Int
  float: Float
  bigInt: Int
}

input RemoveNumberInput {
   id: ID!
}

# string_testing

input AddStringInput {
  id: ID!
  string: String
}

input RemoveStringInput {
  id: ID!
}

# url_testing

input AddUrlInput {
  id: ID!
  url: URL
}

input RemoveUrlInput {
  id: ID!
}

# country_testing

input AddCountryInput {
  id: ID!
  country: String
}

input AddCountriesInput {
  id: ID!
  country: [String]
}

input RemoveCountryInput {
 id: ID!
}

# enum_testing

input AddEnumInput {
  id: ID!
  enum: String
  enumMultiple: [String]
}

input RemoveEnumInput {
  id: ID!
}

# currency_testing

input AddCurrencyInput {
  id: ID!
  currency: Currency
}

input RemoveCurrencyInput {
  id: ID!
}

# amount_testing

input AddAmountInput {
  id: ID!
  value: Amount
}

input AddAmountPercentageInput {
  id: ID!
  value: Amount_Percentage
}

input RemoveAmountInput {
  id: ID!
  
}

input RemovePercentInput {
  id:ID!
}

input AddAmountFiatInput {
  id: ID!
  value: Amount_Fiat
}

input RemoveAmountFiatInput {
 id:ID!
}

input AddAmountCryptoInput {
  id: ID!
  value: Amount_Crypto
}

input RemoveAmountCryptoInput {
 id: ID!
}

input AddAmountCurrencyInput {
  id: ID!
  value: Amount_Currency
}

input RemoveAmountCurrencyInput {
  id: ID!
}

# phid_testing

input AddPhidInput {
  id: ID!
  phid: String
}

input RemovePhidInput {
  id: ID!
}

# drop_down

input AddValueDropdownInput {
  id: ID!
  value: String
}

# aid_testing

input AddAidInput {
  id: ID!
  aid: String
}

input RemoveAidInput {
  id: ID!
}

# date_field_module

input AddDateInput {
  id: ID!
  date: String
}

input RemoveDateInput {
  id: ID!
}

# time_testing

input AddTimeInput {
  id: ID!
  time: String
}

input RemoveTimeInput {
  id: ID!
}

# date_time

input AddDateTimeInput {
  id: ID!
  datetime: String
}

input RemoveDateTimeInput {
  id: ID!
}

# oid_testing

input AddOidInput {
  id: ID!
  oid: String
}

input RemoveOidInput {
  id: ID!
}

# email_testing

input AddEmailInput {
 id: ID!
 email: EmailAddress 
}

input RemoveEmailInput {
  id: ID!
}